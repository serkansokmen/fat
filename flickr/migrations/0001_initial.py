# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-23 22:27
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import multiselectfield.db.fields
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paint_image', sorl.thumbnail.fields.ImageField(upload_to='paint_image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Annotation',
                'verbose_name_plural': 'Annotations',
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'updated_at',
            },
        ),
        migrations.CreateModel(
            name='AnnotationSemanticCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(default=1.0)),
                ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flickr.Annotation')),
            ],
        ),
        migrations.CreateModel(
            name='DiscardedImage',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('owner', models.CharField(max_length=255)),
                ('secret', models.CharField(max_length=255, unique=True)),
                ('server', models.CharField(max_length=255)),
                ('farm', models.IntegerField()),
                ('license', models.CharField(blank=True, choices=[(0, 'All Rights Reserved'), (1, 'Attribution-NonCommercial-ShareAlike License'), (2, 'Attribution-NonCommercial License'), (3, 'Attribution-NonCommercial-NoDerivs License'), (4, 'Attribution License'), (5, 'Attribution-ShareAlike License'), (6, 'Attribution-NoDerivs License'), (7, 'No known copyright restrictions'), (8, 'United States Government Work')], max_length=2, null=True)),
                ('tags', models.TextField(blank=True, null=True)),
                ('ispublic', models.NullBooleanField()),
                ('isfriend', models.NullBooleanField()),
                ('isfamily', models.NullBooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Discarded image',
                'verbose_name_plural': 'Discarded images',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('owner', models.CharField(max_length=255)),
                ('secret', models.CharField(max_length=255, unique=True)),
                ('server', models.CharField(max_length=255)),
                ('farm', models.IntegerField()),
                ('license', models.CharField(blank=True, choices=[(0, 'All Rights Reserved'), (1, 'Attribution-NonCommercial-ShareAlike License'), (2, 'Attribution-NonCommercial License'), (3, 'Attribution-NonCommercial-NoDerivs License'), (4, 'Attribution License'), (5, 'Attribution-ShareAlike License'), (6, 'Attribution-NoDerivs License'), (7, 'No known copyright restrictions'), (8, 'United States Government Work')], max_length=2, null=True)),
                ('tags', models.TextField(blank=True, null=True)),
                ('ispublic', models.NullBooleanField()),
                ('isfriend', models.NullBooleanField()),
                ('isfamily', models.NullBooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Selected image',
                'verbose_name_plural': 'Selected images',
            },
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.TextField(max_length=2048, unique=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=255, populate_from='tags')),
                ('tag_mode', models.CharField(choices=[('all', 'all'), ('any', 'any')], default=('all', 'all'), max_length=3)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('licenses', multiselectfield.db.fields.MultiSelectField(choices=[(0, 'All Rights Reserved'), (1, 'Attribution-NonCommercial-ShareAlike License'), (2, 'Attribution-NonCommercial License'), (3, 'Attribution-NonCommercial-NoDerivs License'), (4, 'Attribution License'), (5, 'Attribution-ShareAlike License'), (6, 'Attribution-NoDerivs License'), (7, 'No known copyright restrictions'), (8, 'United States Government Work')], max_length=20)),
                ('images', models.ManyToManyField(blank=True, related_name='search', to='flickr.Image')),
            ],
            options={
                'verbose_name': 'Search',
                'verbose_name_plural': 'Searches',
                'ordering': ['-created_at', '-updated_at'],
                'get_latest_by': 'updated_at',
            },
        ),
        migrations.CreateModel(
            name='SemanticCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('value', models.FloatField(default=1.0)),
            ],
            options={
                'verbose_name': 'Semantic check value',
                'verbose_name_plural': 'Semantic check values',
                'ordering': ['label'],
            },
        ),
        migrations.AddField(
            model_name='annotationsemanticcheck',
            name='semantic_check',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flickr.SemanticCheck'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flickr.Image'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='semantic_check_values',
            field=models.ManyToManyField(through='flickr.AnnotationSemanticCheck', to='flickr.SemanticCheck'),
        ),
    ]
